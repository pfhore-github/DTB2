// -*- C++ -*- generated by wxGlade 0.6.3 on Sat Sep  6 18:07:53 2008

#include "atque.h"
#include "termview.h"
#include "split.h"
#include "merge.h"
#include <iostream>
#include <sstream>

#include <wx/config.h>
#include <wx/filename.h>
#include <wx/string.h>
#include <locale.h>
// begin wxGlade: ::extracode
// end wxGlade

AtqueWindow::AtqueWindow(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
	wxFrame(parent, id, title, pos, size, wxCAPTION | wxCLOSE_BOX | wxSYSTEM_MENU
#if defined(__WIN32__) || (defined(__APPLE__) && defined(__MACH__))
		| wxSIMPLE_BORDER
#endif
		)
{
    // begin wxGlade: AtqueWindow::AtqueWindow
    panel_1 = new wxPanel(this, wxID_ANY);
    menuBar = new wxMenuBar();
    wxMenu* fileMenu = new wxMenu();
    fileMenu->Append(wxID_ABOUT, wxT("About DTB2..."), wxEmptyString, wxITEM_NORMAL);
    fileMenu->AppendSeparator();
    fileMenu->Append(MENU_View, wxT("Open scenario..."), wxEmptyString, wxITEM_NORMAL);
    fileMenu->Append(MENU_View2, wxT("Open term.txt..."), wxEmptyString, wxITEM_NORMAL);
    fileMenu->Append(wxID_EXIT, wxT("&Quit"), wxEmptyString, wxITEM_NORMAL);
    menuBar->Append(fileMenu, wxT("File"));
    SetMenuBar(menuBar);
    instructions = new wxStaticText(panel_1, wxID_ANY, wxT("Drag and drop a file to split, or a folder to merge."), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);

    set_properties();
    do_layout();
    // end wxGlade

    instructions->SetDropTarget(new AtqueDnD(this));
}


BEGIN_EVENT_TABLE(AtqueWindow, wxFrame)
    // begin wxGlade: AtqueWindow::event_table
    EVT_MENU(wxID_ABOUT, AtqueWindow::OnAbout)
    EVT_MENU(MENU_View, AtqueWindow::OnView)
    EVT_MENU(MENU_View2, AtqueWindow::OnView2)
    EVT_MENU(wxID_EXIT, AtqueWindow::OnExit)
    // end wxGlade
END_EVENT_TABLE();


void AtqueWindow::OnAbout(wxCommandEvent &event)
{
    wxMessageBox(wxT("DTB2 powered by Atque 1.1.3 (C) DTB2 is licensed under the GNU GPL. See COPYING.txt"), wxT("About DTB2"), wxOK);
}
void AtqueWindow::OnView2(wxCommandEvent &event)
{
}
void AtqueWindow::OnView(wxCommandEvent &event)
{
    // find the user's file
    wxConfig config;
    wxString Directory;
    config.Read(wxT("Split/DefaultDirectory/Load"), &Directory, wxT(""));
    wxFileDialog *openFileDialog = new wxFileDialog(this,
						    wxT("Choose file"),
						    Directory,
						    wxT(""),
						    wxT("Scenario files|*.sceA;*.imgA|All files|*.*"),
						    wxFD_OPEN);
    if (openFileDialog->ShowModal() == wxID_OK)
    {
	Split(openFileDialog->GetPath());

    }
}


void AtqueWindow::OnExit(wxCommandEvent &event)
{
	Close(TRUE);
}


// wxGlade: add AtqueWindow event handlers

void AtqueWindow::Split(const wxString& file)
{
    // find the split destination
    wxConfig config;
    wxString Directory;
	std::stringstream log;

	try
	{
		atque::Resources* rsrc = new atque::Resources;
		atque::split(*rsrc, std::string(file.mb_str(wxConvUTF8)), std::string(""), log);
		
		log.seekg(0);
		std::string line;
		while (getline(log, line))
		{
			wxLogMessage(wxString(line.c_str(), wxConvUTF8));
		}
		std::vector<wxString> ls;
		for(int i= 0; i < rsrc->levels.size(); ++i ) {
			ls.push_back( rsrc->levels[i].name );
		}
		TermView* tv = new TermView(rsrc, ls);
		tv->Show( true );
	}
	catch (const atque::split_error& e)
	{
		wxLogMessage(wxT("Split failed: " + wxString(e.what(), wxConvUTF8)));
	}
}

void AtqueWindow::set_properties()
{
    // begin wxGlade: AtqueWindow::set_properties
    SetTitle(wxT("Atque"));
    // end wxGlade
}


void AtqueWindow::do_layout()
{
    // begin wxGlade: AtqueWindow::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxVERTICAL);
    sizer_2->Add(instructions, 0, wxALL|wxEXPAND, 5);
    panel_1->SetSizer(sizer_2);
    sizer_1->Add(panel_1, 1, wxEXPAND, 0);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    Layout();
    // end wxGlade
}

bool AtqueDnD::OnDropFiles(wxCoord, wxCoord, const wxArrayString& filenames)
{
	if (filenames.GetCount() == 1)
	{
		if (wxFileName::FileExists(filenames[0]))
		{
			window_->Split(filenames[0]);
			return true;
		}
	}

	return false;
}

class Atque: public wxApp {
public:
    bool OnInit();
#ifdef __WXMAC__
	void MacOpenFile(const wxString& filename);
#endif
private:
	AtqueWindow* Frame;
};

IMPLEMENT_APP(Atque)

bool Atque::OnInit()
{
    wxInitAllImageHandlers();
	setlocale(LC_ALL, "");
    Frame = new AtqueWindow(NULL, wxID_ANY, wxEmptyString);
    SetTopWindow(Frame);
    Frame->Show();
    return true;
}

#ifdef __WXMAC__
void Atque::MacOpenFile(const wxString& filename)
{
	if (wxFileName::DirExists(filename))
	{
		Frame->Merge(filename);
	}
	else if (wxFileName::FileExists(filename))
	{
		Frame->Split(filename);
	}
}
#endif

